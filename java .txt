1.java安装
Java 在/usr/local/java/，已卸载 环境变量在/etc/profile  source /etc/profile
Java 在/usr/local/java/jdk8

下载jdk-8u171-linux-x64.tar.gz

在/usr/local/下mkdir java
把jdk-8u171-linux-x64.tar.gz移动到/usr/local/java下
tar -zxvf jdk-8u171-linux-x64.tar.gz
修改/etc/profile,在末尾添加
export JAVA_HOME=/usr/local/java/jdk8
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
export PATH=$JAVA_HOME/bin:$PATH
等号与变量和路径之间不要加空格

2.Java数组字符串输出
System.out.println(Arrays.toString(array));


3.字符流与字节流
字符与字节，‘a’是字符，97是字节。
字符流处理的单元为2个字节的Unicode字符，分别操作字符、字符数组或字符串。
所有文件的储存是都是字节（byte）的储存。
字节流在操作时不会用到缓冲区（内存），是直接对文件本身进行操作的。而字符流在操作时使用了缓冲区，通过缓冲区再操作文件。 
字符流其实是通过转换流变化为字节流再进行IO操作。
字符流到文件流的转换Java提供了两个转换流：InputStreamReader和OutputStreamWriter。
为了提高数据的传输效率，特意引入缓冲流(Buffered Stream)的概念，为每一个流配置一个缓冲(Buffered)，BufferedReader类 ，BufferedWriter类。

4.add-ons:译为附加软件，即插件，外挂的意思。

5.TreeMap
TreeMap 是一个有序的key-value集合，它是通过红黑树实现的.
Iterator<Map.Entry<String, String>> iterator = map.entrySet().iterator();
while (iterator.hasNext()) {
    Map.Entry<String, String> entry = iterator.next();
    System.out.println(entry.getKey() + "　：" + entry.getValue());
}
Map遍历最快。


6.List遍历
LinkedList 使用迭代器较快
Iterator<String> it = list.iterator();
while(it.hasNext()){
    System.out.println(it.next());
}
ArrayList 使用get(index)
List<String> list = new ArrayList<String>();
for(int i = 0; i < list.size(); i++){
    System.out.println(list.get(i));
}


7.Java socket
Socket 和ServerSocket 是一对  他们是java.net下面实现socket通信的类
SocketChannel 和ServerSocketChannel是一对   他们是java.nio下面实现通信的类 支持异步通信

8.Netty
Netty 是一个基于NIO的客户、服务器端编程框架，使用Netty 可以确保你快速和简单的开发出一个网络应用，例如实现了某种协议的客户，服务端应用。Netty相当简化和流线化了网络应用的编程开发过程，例如，TCP和UDP的socket服务开发。
https://mvnrepository.com/artifact/io.netty/netty-all 查看最新的maven仓库

9.NIO中都是使用缓冲区buffer
在基本IO操作中，所有的数据都是以流的形式操作的，而在NIO中，则都是使用缓冲区，所有的读写操作都是使用缓冲区完成的。
所有缓冲区都是抽象类Buffer的子类。Java NIO中的Buffer主要用于与NIO通道进行交互，数据是从通道读入到缓冲区，从缓冲区写入通道中的。
缓冲区本质上是一块可以写入数据，然后可以从中读取数据的内存。这块内存被包装成NIO Buffer对象，并提供了一组方法，用来方便的访问该块内存。

